// Copyright 2021 Shashwat Sharma and Piero Triverio

// This file is part of Strata.

// Strata is free software: you can redistribute it and/or modify
// it under the terms of the GNU General Public License as published by
// the Free Software Foundation, either version 3 of the License, or
// (at your option) any later version.

// Strata is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU General Public License for more details.

// You should have received a copy of the GNU General Public License
// along with Strata.  If not, see <https://www.gnu.org/licenses/>.

/************************ bessel_zeros.hpp ************************

 * A list of the first 500 zeros of the Bessel function, stored in
 * a hash table for quick access. The zeros were computed via the
 * Boost C++ library.
 *
 * Author: Shashwat Sharma
 * Created on: Mar 19, 2020

 ******************************************************************/


#ifndef JZEROS_H
#define JZEROS_H


#include <vector>
#include <set>
#include <iostream>


// ==================================================================================
// Declarations
// ==================================================================================

double BesselJ0_GetZero(int idx);
double BesselJ0_NextZero(double x);

double BesselJ0_GetZero(int idx);
double BesselJ1_NextZero(double x);


// ==================================================================================
// Definitions
// ==================================================================================

/*! \brief Compute the idx^th zero of the Bessel function of first kind, order 0, with idx starting at 1.*/
inline double BesselJ0_GetZero(int idx)
{
	
	std::vector<double> J0_zeros = {
		2.40483, 5.52008, 8.65373, 11.7915, 14.9309, 18.0711, 21.2116, 24.3525, 27.4935, 30.6346, 33.7758, 36.9171, 40.0584, 43.1998, 46.3412, 49.4826, 52.6241, 55.7655, 58.907, 62.0485, 65.19, 68.3315, 71.473, 74.6145, 77.756, 80.8976, 84.0391, 87.1806, 90.3222, 93.4637, 96.6053, 99.7468, 102.888, 106.03, 109.171, 112.313, 115.455, 118.596, 121.738, 124.879, 128.021, 131.162, 134.304, 137.446, 140.587, 143.729, 146.87, 150.012, 153.153, 156.295, 159.437, 162.578, 165.72, 168.861, 172.003, 175.145, 178.286, 181.428, 184.569, 187.711, 190.852, 193.994, 197.136, 200.277, 203.419, 206.56, 209.702, 212.843, 215.985, 219.127, 222.268, 225.41, 228.551, 231.693, 234.835, 237.976, 241.118, 244.259, 247.401, 250.543, 253.684, 256.826, 259.967, 263.109, 266.25, 269.392, 272.534, 275.675, 278.817, 281.958, 285.1, 288.242, 291.383, 294.525, 297.666, 300.808, 303.95, 307.091, 310.233, 313.374, 316.516, 319.657, 322.799, 325.941, 329.082, 332.224, 335.365, 338.507, 341.649, 344.79, 347.932, 351.073, 354.215, 357.357, 360.498, 363.64, 366.781, 369.923, 373.064, 376.206, 379.348, 382.489, 385.631, 388.772, 391.914, 395.056, 398.197, 401.339, 404.48, 407.622, 410.764, 413.905, 417.047, 420.188, 423.33, 426.471, 429.613, 432.755, 435.896, 439.038, 442.179, 445.321, 448.463, 451.604, 454.746, 457.887, 461.029, 464.171, 467.312, 470.454, 473.595, 476.737, 479.879, 483.02, 486.162, 489.303, 492.445, 495.586, 498.728, 501.87, 505.011, 508.153, 511.294, 514.436, 517.578, 520.719, 523.861, 527.002, 530.144, 533.286, 536.427, 539.569, 542.71, 545.852, 548.994, 552.135, 555.277, 558.418, 561.56, 564.702, 567.843, 570.985, 574.126, 577.268, 580.409, 583.551, 586.693, 589.834, 592.976, 596.117, 599.259, 602.401, 605.542, 608.684, 611.825, 614.967, 618.109, 621.25, 624.392, 627.533, 630.675, 633.817, 636.958, 640.1, 643.241, 646.383, 649.524, 652.666, 655.808, 658.949, 662.091, 665.232, 668.374, 671.516, 674.657, 677.799, 680.94, 684.082, 687.224, 690.365, 693.507, 696.648, 699.79, 702.932, 706.073, 709.215, 712.356, 715.498, 718.639, 721.781, 724.923, 728.064, 731.206, 734.347, 737.489, 740.631, 743.772, 746.914, 750.055, 753.197, 756.339, 759.48, 762.622, 765.763, 768.905, 772.047, 775.188, 778.33, 781.471, 784.613, 787.755, 790.896, 794.038, 797.179, 800.321, 803.462, 806.604, 809.746, 812.887, 816.029, 819.17, 822.312, 825.454, 828.595, 831.737, 834.878, 838.02, 841.162, 844.303, 847.445, 850.586, 853.728, 856.87, 860.011, 863.153, 866.294, 869.436, 872.578, 875.719, 878.861, 882.002, 885.144, 888.285, 891.427, 894.569, 897.71, 900.852, 903.993, 907.135, 910.277, 913.418, 916.56, 919.701, 922.843, 925.985, 929.126, 932.268, 935.409, 938.551, 941.693, 944.834, 947.976, 951.117, 954.259, 957.4, 960.542, 963.684, 966.825, 969.967, 973.108, 976.25, 979.392, 982.533, 985.675, 988.816, 991.958, 995.1, 998.241, 1001.38, 1004.52, 1007.67, 1010.81, 1013.95, 1017.09, 1020.23, 1023.37, 1026.52, 1029.66, 1032.8, 1035.94, 1039.08, 1042.22, 1045.37, 1048.51, 1051.65, 1054.79, 1057.93, 1061.07, 1064.21, 1067.36, 1070.5, 1073.64, 1076.78, 1079.92, 1083.06, 1086.21, 1089.35, 1092.49, 1095.63, 1098.77, 1101.91, 1105.06, 1108.2, 1111.34, 1114.48, 1117.62, 1120.76, 1123.9, 1127.05, 1130.19, 1133.33, 1136.47, 1139.61, 1142.75, 1145.9, 1149.04, 1152.18, 1155.32, 1158.46, 1161.6, 1164.75, 1167.89, 1171.03, 1174.17, 1177.31, 1180.45, 1183.6, 1186.74, 1189.88, 1193.02, 1196.16, 1199.3, 1202.44, 1205.59, 1208.73, 1211.87, 1215.01, 1218.15, 1221.29, 1224.44, 1227.58, 1230.72, 1233.86, 1237, 1240.14, 1243.29, 1246.43, 1249.57, 1252.71, 1255.85, 1258.99, 1262.13, 1265.28, 1268.42, 1271.56, 1274.7, 1277.84, 1280.98, 1284.13, 1287.27, 1290.41, 1293.55, 1296.69, 1299.83, 1302.98, 1306.12, 1309.26, 1312.4, 1315.54, 1318.68, 1321.83, 1324.97, 1328.11, 1331.25, 1334.39, 1337.53, 1340.67, 1343.82, 1346.96, 1350.1, 1353.24, 1356.38, 1359.52, 1362.67, 1365.81, 1368.95, 1372.09, 1375.23, 1378.37, 1381.52, 1384.66, 1387.8, 1390.94, 1394.08, 1397.22, 1400.37, 1403.51, 1406.65, 1409.79, 1412.93, 1416.07, 1419.21, 1422.36, 1425.5, 1428.64, 1431.78, 1434.92, 1438.06, 1441.21, 1444.35, 1447.49, 1450.63, 1453.77, 1456.91, 1460.06, 1463.2, 1466.34, 1469.48, 1472.62, 1475.76, 1478.9, 1482.05, 1485.19, 1488.33, 1491.47, 1494.61, 1497.75, 1500.9, 1504.04, 1507.18, 1510.32, 1513.46, 1516.6, 1519.75, 1522.89, 1526.03, 1529.17, 1532.31, 1535.45, 1538.6, 1541.74, 1544.88, 1548.02, 1551.16, 1554.3, 1557.44, 1560.59, 1563.73, 1566.87
	};

	if (idx > 499)
	{
		std::cout << "[WARNING] BesselJ0_GetZero(): Requested zero index is beyond what's tabulated. Returning the last recorded (500th) zero instead." << std::endl;
		return J0_zeros[499];
	}

	return J0_zeros[idx-1];

}


/*! \brief Compute the first zero of the Bessel function of first kind, order 0, which occurs after a given point x, with idx starting at 1.*/
inline double BesselJ0_NextZero(double x)
{

	std::set<double> J0_zeros = {
		2.40483, 5.52008, 8.65373, 11.7915, 14.9309, 18.0711, 21.2116, 24.3525, 27.4935, 30.6346, 33.7758, 36.9171, 40.0584, 43.1998, 46.3412, 49.4826, 52.6241, 55.7655, 58.907, 62.0485, 65.19, 68.3315, 71.473, 74.6145, 77.756, 80.8976, 84.0391, 87.1806, 90.3222, 93.4637, 96.6053, 99.7468, 102.888, 106.03, 109.171, 112.313, 115.455, 118.596, 121.738, 124.879, 128.021, 131.162, 134.304, 137.446, 140.587, 143.729, 146.87, 150.012, 153.153, 156.295, 159.437, 162.578, 165.72, 168.861, 172.003, 175.145, 178.286, 181.428, 184.569, 187.711, 190.852, 193.994, 197.136, 200.277, 203.419, 206.56, 209.702, 212.843, 215.985, 219.127, 222.268, 225.41, 228.551, 231.693, 234.835, 237.976, 241.118, 244.259, 247.401, 250.543, 253.684, 256.826, 259.967, 263.109, 266.25, 269.392, 272.534, 275.675, 278.817, 281.958, 285.1, 288.242, 291.383, 294.525, 297.666, 300.808, 303.95, 307.091, 310.233, 313.374, 316.516, 319.657, 322.799, 325.941, 329.082, 332.224, 335.365, 338.507, 341.649, 344.79, 347.932, 351.073, 354.215, 357.357, 360.498, 363.64, 366.781, 369.923, 373.064, 376.206, 379.348, 382.489, 385.631, 388.772, 391.914, 395.056, 398.197, 401.339, 404.48, 407.622, 410.764, 413.905, 417.047, 420.188, 423.33, 426.471, 429.613, 432.755, 435.896, 439.038, 442.179, 445.321, 448.463, 451.604, 454.746, 457.887, 461.029, 464.171, 467.312, 470.454, 473.595, 476.737, 479.879, 483.02, 486.162, 489.303, 492.445, 495.586, 498.728, 501.87, 505.011, 508.153, 511.294, 514.436, 517.578, 520.719, 523.861, 527.002, 530.144, 533.286, 536.427, 539.569, 542.71, 545.852, 548.994, 552.135, 555.277, 558.418, 561.56, 564.702, 567.843, 570.985, 574.126, 577.268, 580.409, 583.551, 586.693, 589.834, 592.976, 596.117, 599.259, 602.401, 605.542, 608.684, 611.825, 614.967, 618.109, 621.25, 624.392, 627.533, 630.675, 633.817, 636.958, 640.1, 643.241, 646.383, 649.524, 652.666, 655.808, 658.949, 662.091, 665.232, 668.374, 671.516, 674.657, 677.799, 680.94, 684.082, 687.224, 690.365, 693.507, 696.648, 699.79, 702.932, 706.073, 709.215, 712.356, 715.498, 718.639, 721.781, 724.923, 728.064, 731.206, 734.347, 737.489, 740.631, 743.772, 746.914, 750.055, 753.197, 756.339, 759.48, 762.622, 765.763, 768.905, 772.047, 775.188, 778.33, 781.471, 784.613, 787.755, 790.896, 794.038, 797.179, 800.321, 803.462, 806.604, 809.746, 812.887, 816.029, 819.17, 822.312, 825.454, 828.595, 831.737, 834.878, 838.02, 841.162, 844.303, 847.445, 850.586, 853.728, 856.87, 860.011, 863.153, 866.294, 869.436, 872.578, 875.719, 878.861, 882.002, 885.144, 888.285, 891.427, 894.569, 897.71, 900.852, 903.993, 907.135, 910.277, 913.418, 916.56, 919.701, 922.843, 925.985, 929.126, 932.268, 935.409, 938.551, 941.693, 944.834, 947.976, 951.117, 954.259, 957.4, 960.542, 963.684, 966.825, 969.967, 973.108, 976.25, 979.392, 982.533, 985.675, 988.816, 991.958, 995.1, 998.241, 1001.38, 1004.52, 1007.67, 1010.81, 1013.95, 1017.09, 1020.23, 1023.37, 1026.52, 1029.66, 1032.8, 1035.94, 1039.08, 1042.22, 1045.37, 1048.51, 1051.65, 1054.79, 1057.93, 1061.07, 1064.21, 1067.36, 1070.5, 1073.64, 1076.78, 1079.92, 1083.06, 1086.21, 1089.35, 1092.49, 1095.63, 1098.77, 1101.91, 1105.06, 1108.2, 1111.34, 1114.48, 1117.62, 1120.76, 1123.9, 1127.05, 1130.19, 1133.33, 1136.47, 1139.61, 1142.75, 1145.9, 1149.04, 1152.18, 1155.32, 1158.46, 1161.6, 1164.75, 1167.89, 1171.03, 1174.17, 1177.31, 1180.45, 1183.6, 1186.74, 1189.88, 1193.02, 1196.16, 1199.3, 1202.44, 1205.59, 1208.73, 1211.87, 1215.01, 1218.15, 1221.29, 1224.44, 1227.58, 1230.72, 1233.86, 1237, 1240.14, 1243.29, 1246.43, 1249.57, 1252.71, 1255.85, 1258.99, 1262.13, 1265.28, 1268.42, 1271.56, 1274.7, 1277.84, 1280.98, 1284.13, 1287.27, 1290.41, 1293.55, 1296.69, 1299.83, 1302.98, 1306.12, 1309.26, 1312.4, 1315.54, 1318.68, 1321.83, 1324.97, 1328.11, 1331.25, 1334.39, 1337.53, 1340.67, 1343.82, 1346.96, 1350.1, 1353.24, 1356.38, 1359.52, 1362.67, 1365.81, 1368.95, 1372.09, 1375.23, 1378.37, 1381.52, 1384.66, 1387.8, 1390.94, 1394.08, 1397.22, 1400.37, 1403.51, 1406.65, 1409.79, 1412.93, 1416.07, 1419.21, 1422.36, 1425.5, 1428.64, 1431.78, 1434.92, 1438.06, 1441.21, 1444.35, 1447.49, 1450.63, 1453.77, 1456.91, 1460.06, 1463.2, 1466.34, 1469.48, 1472.62, 1475.76, 1478.9, 1482.05, 1485.19, 1488.33, 1491.47, 1494.61, 1497.75, 1500.9, 1504.04, 1507.18, 1510.32, 1513.46, 1516.6, 1519.75, 1522.89, 1526.03, 1529.17, 1532.31, 1535.45, 1538.6, 1541.74, 1544.88, 1548.02, 1551.16, 1554.3, 1557.44, 1560.59, 1563.73, 1566.87
	};

	auto it = J0_zeros.lower_bound(x);
	
	if (it == std::end(J0_zeros))
	{
		std::cout << "[WARNING] BesselJ0_NextZero(): Requested zero index is beyond what's tabulated. Returning the last recorded (500th) zero instead." << std::endl;
		return *(J0_zeros.rbegin());
	}

	return *it;

}


/*! \brief Compute the idx^th zero of the Bessel function of first kind, order 1, with idx starting at 1.*/
inline double BesselJ1_GetZero(int idx)
{

	std::vector<double> J1_zeros = {
		3.83171, 7.01559, 10.1735, 13.3237, 16.4706, 19.6159, 22.7601, 25.9037, 29.0468, 32.1897, 35.3323, 38.4748, 41.6171, 44.7593, 47.9015, 51.0435, 54.1856, 57.3275, 60.4695, 63.6114, 66.7532, 69.8951, 73.0369, 76.1787, 79.3205, 82.4623, 85.604, 88.7458, 91.8875, 95.0292, 98.171, 101.313, 104.454, 107.596, 110.738, 113.879, 117.021, 120.163, 123.304, 126.446, 129.588, 132.729, 135.871, 139.013, 142.154, 145.296, 148.438, 151.579, 154.721, 157.863, 161.004, 164.146, 167.288, 170.429, 173.571, 176.712, 179.854, 182.996, 186.137, 189.279, 192.421, 195.562, 198.704, 201.845, 204.987, 208.129, 211.27, 214.412, 217.554, 220.695, 223.837, 226.978, 230.12, 233.262, 236.403, 239.545, 242.686, 245.828, 248.97, 252.111, 255.253, 258.395, 261.536, 264.678, 267.819, 270.961, 274.103, 277.244, 280.386, 283.527, 286.669, 289.811, 292.952, 296.094, 299.235, 302.377, 305.519, 308.66, 311.802, 314.943, 318.085, 321.227, 324.368, 327.51, 330.651, 333.793, 336.935, 340.076, 343.218, 346.36, 349.501, 352.643, 355.784, 358.926, 362.068, 365.209, 368.351, 371.492, 374.634, 377.776, 380.917, 384.059, 387.2, 390.342, 393.484, 396.625, 399.767, 402.908, 406.05, 409.192, 412.333, 415.475, 418.616, 421.758, 424.9, 428.041, 431.183, 434.324, 437.466, 440.608, 443.749, 446.891, 450.032, 453.174, 456.316, 459.457, 462.599, 465.74, 468.882, 472.024, 475.165, 478.307, 481.448, 484.59, 487.731, 490.873, 494.015, 497.156, 500.298, 503.439, 506.581, 509.723, 512.864, 516.006, 519.147, 522.289, 525.431, 528.572, 531.714, 534.855, 537.997, 541.139, 544.28, 547.422, 550.563, 553.705, 556.847, 559.988, 563.13, 566.271, 569.413, 572.555, 575.696, 578.838, 581.979, 585.121, 588.263, 591.404, 594.546, 597.687, 600.829, 603.971, 607.112, 610.254, 613.395, 616.537, 619.679, 622.82, 625.962, 629.103, 632.245, 635.387, 638.528, 641.67, 644.811, 647.953, 651.095, 654.236, 657.378, 660.519, 663.661, 666.802, 669.944, 673.086, 676.227, 679.369, 682.51, 685.652, 688.794, 691.935, 695.077, 698.218, 701.36, 704.502, 707.643, 710.785, 713.926, 717.068, 720.21, 723.351, 726.493, 729.634, 732.776, 735.918, 739.059, 742.201, 745.342, 748.484, 751.626, 754.767, 757.909, 761.05, 764.192, 767.334, 770.475, 773.617, 776.758, 779.9, 783.041, 786.183, 789.325, 792.466, 795.608, 798.749, 801.891, 805.033, 808.174, 811.316, 814.457, 817.599, 820.741, 823.882, 827.024, 830.165, 833.307, 836.449, 839.59, 842.732, 845.873, 849.015, 852.157, 855.298, 858.44, 861.581, 864.723, 867.865, 871.006, 874.148, 877.289, 880.431, 883.573, 886.714, 889.856, 892.997, 896.139, 899.28, 902.422, 905.564, 908.705, 911.847, 914.988, 918.13, 921.272, 924.413, 927.555, 930.696, 933.838, 936.98, 940.121, 943.263, 946.404, 949.546, 952.688, 955.829, 958.971, 962.112, 965.254, 968.396, 971.537, 974.679, 977.82, 980.962, 984.104, 987.245, 990.387, 993.528, 996.67, 999.811, 1002.95, 1006.09, 1009.24, 1012.38, 1015.52, 1018.66, 1021.8, 1024.94, 1028.09, 1031.23, 1034.37, 1037.51, 1040.65, 1043.79, 1046.94, 1050.08, 1053.22, 1056.36, 1059.5, 1062.64, 1065.78, 1068.93, 1072.07, 1075.21, 1078.35, 1081.49, 1084.63, 1087.78, 1090.92, 1094.06, 1097.2, 1100.34, 1103.48, 1106.63, 1109.77, 1112.91, 1116.05, 1119.19, 1122.33, 1125.48, 1128.62, 1131.76, 1134.9, 1138.04, 1141.18, 1144.32, 1147.47, 1150.61, 1153.75, 1156.89, 1160.03, 1163.17, 1166.32, 1169.46, 1172.6, 1175.74, 1178.88, 1182.02, 1185.17, 1188.31, 1191.45, 1194.59, 1197.73, 1200.87, 1204.02, 1207.16, 1210.3, 1213.44, 1216.58, 1219.72, 1222.86, 1226.01, 1229.15, 1232.29, 1235.43, 1238.57, 1241.71, 1244.86, 1248, 1251.14, 1254.28, 1257.42, 1260.56, 1263.71, 1266.85, 1269.99, 1273.13, 1276.27, 1279.41, 1282.55, 1285.7, 1288.84, 1291.98, 1295.12, 1298.26, 1301.4, 1304.55, 1307.69, 1310.83, 1313.97, 1317.11, 1320.25, 1323.4, 1326.54, 1329.68, 1332.82, 1335.96, 1339.1, 1342.25, 1345.39, 1348.53, 1351.67, 1354.81, 1357.95, 1361.09, 1364.24, 1367.38, 1370.52, 1373.66, 1376.8, 1379.94, 1383.09, 1386.23, 1389.37, 1392.51, 1395.65, 1398.79, 1401.94, 1405.08, 1408.22, 1411.36, 1414.5, 1417.64, 1420.79, 1423.93, 1427.07, 1430.21, 1433.35, 1436.49, 1439.63, 1442.78, 1445.92, 1449.06, 1452.2, 1455.34, 1458.48, 1461.63, 1464.77, 1467.91, 1471.05, 1474.19, 1477.33, 1480.48, 1483.62, 1486.76, 1489.9, 1493.04, 1496.18, 1499.32, 1502.47, 1505.61, 1508.75, 1511.89, 1515.03, 1518.17, 1521.32, 1524.46, 1527.6, 1530.74, 1533.88, 1537.02, 1540.17, 1543.31, 1546.45, 1549.59, 1552.73, 1555.87, 1559.02, 1562.16, 1565.3, 1568.44
	};

	if (idx > 499)
	{
		std::cout << "[WARNING] BesselJ1_GetZero(): Requested zero index is beyond what's tabulated. Returning the last recorded (500th) zero instead." << std::endl;
		return J1_zeros[499];
	}

	return J1_zeros[idx-1];

}


/*! \brief Compute the first zero of the Bessel function of first kind, order 1, which occurs after a given point x, with idx starting at 1.*/
inline double BesselJ1_NextZero(double x)
{

	std::set<double> J1_zeros = {
		3.83171, 7.01559, 10.1735, 13.3237, 16.4706, 19.6159, 22.7601, 25.9037, 29.0468, 32.1897, 35.3323, 38.4748, 41.6171, 44.7593, 47.9015, 51.0435, 54.1856, 57.3275, 60.4695, 63.6114, 66.7532, 69.8951, 73.0369, 76.1787, 79.3205, 82.4623, 85.604, 88.7458, 91.8875, 95.0292, 98.171, 101.313, 104.454, 107.596, 110.738, 113.879, 117.021, 120.163, 123.304, 126.446, 129.588, 132.729, 135.871, 139.013, 142.154, 145.296, 148.438, 151.579, 154.721, 157.863, 161.004, 164.146, 167.288, 170.429, 173.571, 176.712, 179.854, 182.996, 186.137, 189.279, 192.421, 195.562, 198.704, 201.845, 204.987, 208.129, 211.27, 214.412, 217.554, 220.695, 223.837, 226.978, 230.12, 233.262, 236.403, 239.545, 242.686, 245.828, 248.97, 252.111, 255.253, 258.395, 261.536, 264.678, 267.819, 270.961, 274.103, 277.244, 280.386, 283.527, 286.669, 289.811, 292.952, 296.094, 299.235, 302.377, 305.519, 308.66, 311.802, 314.943, 318.085, 321.227, 324.368, 327.51, 330.651, 333.793, 336.935, 340.076, 343.218, 346.36, 349.501, 352.643, 355.784, 358.926, 362.068, 365.209, 368.351, 371.492, 374.634, 377.776, 380.917, 384.059, 387.2, 390.342, 393.484, 396.625, 399.767, 402.908, 406.05, 409.192, 412.333, 415.475, 418.616, 421.758, 424.9, 428.041, 431.183, 434.324, 437.466, 440.608, 443.749, 446.891, 450.032, 453.174, 456.316, 459.457, 462.599, 465.74, 468.882, 472.024, 475.165, 478.307, 481.448, 484.59, 487.731, 490.873, 494.015, 497.156, 500.298, 503.439, 506.581, 509.723, 512.864, 516.006, 519.147, 522.289, 525.431, 528.572, 531.714, 534.855, 537.997, 541.139, 544.28, 547.422, 550.563, 553.705, 556.847, 559.988, 563.13, 566.271, 569.413, 572.555, 575.696, 578.838, 581.979, 585.121, 588.263, 591.404, 594.546, 597.687, 600.829, 603.971, 607.112, 610.254, 613.395, 616.537, 619.679, 622.82, 625.962, 629.103, 632.245, 635.387, 638.528, 641.67, 644.811, 647.953, 651.095, 654.236, 657.378, 660.519, 663.661, 666.802, 669.944, 673.086, 676.227, 679.369, 682.51, 685.652, 688.794, 691.935, 695.077, 698.218, 701.36, 704.502, 707.643, 710.785, 713.926, 717.068, 720.21, 723.351, 726.493, 729.634, 732.776, 735.918, 739.059, 742.201, 745.342, 748.484, 751.626, 754.767, 757.909, 761.05, 764.192, 767.334, 770.475, 773.617, 776.758, 779.9, 783.041, 786.183, 789.325, 792.466, 795.608, 798.749, 801.891, 805.033, 808.174, 811.316, 814.457, 817.599, 820.741, 823.882, 827.024, 830.165, 833.307, 836.449, 839.59, 842.732, 845.873, 849.015, 852.157, 855.298, 858.44, 861.581, 864.723, 867.865, 871.006, 874.148, 877.289, 880.431, 883.573, 886.714, 889.856, 892.997, 896.139, 899.28, 902.422, 905.564, 908.705, 911.847, 914.988, 918.13, 921.272, 924.413, 927.555, 930.696, 933.838, 936.98, 940.121, 943.263, 946.404, 949.546, 952.688, 955.829, 958.971, 962.112, 965.254, 968.396, 971.537, 974.679, 977.82, 980.962, 984.104, 987.245, 990.387, 993.528, 996.67, 999.811, 1002.95, 1006.09, 1009.24, 1012.38, 1015.52, 1018.66, 1021.8, 1024.94, 1028.09, 1031.23, 1034.37, 1037.51, 1040.65, 1043.79, 1046.94, 1050.08, 1053.22, 1056.36, 1059.5, 1062.64, 1065.78, 1068.93, 1072.07, 1075.21, 1078.35, 1081.49, 1084.63, 1087.78, 1090.92, 1094.06, 1097.2, 1100.34, 1103.48, 1106.63, 1109.77, 1112.91, 1116.05, 1119.19, 1122.33, 1125.48, 1128.62, 1131.76, 1134.9, 1138.04, 1141.18, 1144.32, 1147.47, 1150.61, 1153.75, 1156.89, 1160.03, 1163.17, 1166.32, 1169.46, 1172.6, 1175.74, 1178.88, 1182.02, 1185.17, 1188.31, 1191.45, 1194.59, 1197.73, 1200.87, 1204.02, 1207.16, 1210.3, 1213.44, 1216.58, 1219.72, 1222.86, 1226.01, 1229.15, 1232.29, 1235.43, 1238.57, 1241.71, 1244.86, 1248, 1251.14, 1254.28, 1257.42, 1260.56, 1263.71, 1266.85, 1269.99, 1273.13, 1276.27, 1279.41, 1282.55, 1285.7, 1288.84, 1291.98, 1295.12, 1298.26, 1301.4, 1304.55, 1307.69, 1310.83, 1313.97, 1317.11, 1320.25, 1323.4, 1326.54, 1329.68, 1332.82, 1335.96, 1339.1, 1342.25, 1345.39, 1348.53, 1351.67, 1354.81, 1357.95, 1361.09, 1364.24, 1367.38, 1370.52, 1373.66, 1376.8, 1379.94, 1383.09, 1386.23, 1389.37, 1392.51, 1395.65, 1398.79, 1401.94, 1405.08, 1408.22, 1411.36, 1414.5, 1417.64, 1420.79, 1423.93, 1427.07, 1430.21, 1433.35, 1436.49, 1439.63, 1442.78, 1445.92, 1449.06, 1452.2, 1455.34, 1458.48, 1461.63, 1464.77, 1467.91, 1471.05, 1474.19, 1477.33, 1480.48, 1483.62, 1486.76, 1489.9, 1493.04, 1496.18, 1499.32, 1502.47, 1505.61, 1508.75, 1511.89, 1515.03, 1518.17, 1521.32, 1524.46, 1527.6, 1530.74, 1533.88, 1537.02, 1540.17, 1543.31, 1546.45, 1549.59, 1552.73, 1555.87, 1559.02, 1562.16, 1565.3, 1568.44
	};

	auto it = J1_zeros.lower_bound(x);
	
	if (it == std::end(J1_zeros))
	{
		std::cout << "[WARNING] BesselJ1_NextZero(): Requested zero index is beyond what's tabulated. Returning the last recorded (500th) zero instead." << std::endl;
		return *(J1_zeros.rbegin());
	}

	return *it;

}

	
#endif





